pipeline {
    agent any

    tools{
        nodejs "NodeJS"
    }
    environment {
        EC2_USER = 'ubuntu'
        EC2_HOST = '18.184.134.115' // change the ip of the machine
        DEPLOY_PATH = '/var/www/html/' // change the path if needed
        SSH_CREDENTIALS = 'my_key'  // Use the same ID from step 5
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', 
                    url: 'https://github.com/fchristian1/todosProjekts.git'
            }
        }
        stage('Build'){
            steps{
                sh """
                    cd todosProject_v1/frontend &&
                    npm install && 
                    npm run build
                """
            }
        }

        stage('Deploy to EC2') {
            steps {
                script {
                    sshagent(credentials: [SSH_CREDENTIALS]) {
                        sh """
                        cd todosProject_v1/frontend/dist
                        ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} 'sudo rm -rf ${DEPLOY_PATH}/* && sudo mkdir -p ${DEPLOY_PATH}'
                        ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} 'rm -rf /home/${EC2_USER}/todosProject_v1/frontend/dist && mkdir -p /home/${EC2_USER}/todosProject_v1/frontend/dist'
                        scp -o StrictHostKeyChecking=no -r * ${EC2_USER}@${EC2_HOST}:/home/${EC2_USER}/todosProject_v1/frontend/dist
                        ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} 'sudo cp -r /home/${EC2_USER}/todosProject_v1/frontend/dist/* ${DEPLOY_PATH}'
                        """
                    }
                }
            }
        }
        stage('Test Deployment with status 200'){
            steps{
                script{
                    def response = sh(script: "curl -s -o /dev/null -w \"%{http_code}\" http://${EC2_HOST}/", returnStdout: true).trim()
                    if(response == '200'){
                        echo "Deployment was successful"
                    }else{
                        error "Deployment failed"
                    }
                }
            }
        }
    }
}